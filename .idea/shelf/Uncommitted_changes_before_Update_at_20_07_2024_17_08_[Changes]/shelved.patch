Index: client/src/pagesDir/offerPage/OfferPage.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import \"./OfferPageStyle.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Offer from \"./Offer.js\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport DeletePopup from \"./DeletePopup.js\"; // Import the new component\r\nimport axios from \"axios\";\r\n\r\nconst OfferPage = ({ isAdmin, userID }) => {\r\n  const navigate = useNavigate();\r\n  const [einschaetzungenData, setEinschaetzungenData] = useState(null);\r\n  const [scoreSecurity, setScoreSecurity] = useState(0);\r\n  const [scoreKollaboration, setScoreKollaboration] = useState(0);\r\n  const [scoreKommunikation, setScoreKommunikation] = useState(0);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const [deleteId, setDeleteId] = useState(null);\r\n  const [angebote, setAngebote] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchEinschaetzungen = async (userID) => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3002/api/einschaetzungen/${userID}`);\r\n        setEinschaetzungenData(response.data);\r\n        console.log('Einschätzungen:', response.data);\r\n        const einschaetzung = response.data[0];\r\n        setScoreSecurity(einschaetzung.ScoreSecurity);\r\n        setScoreKollaboration(einschaetzung.ScoreKollaboration);\r\n        setScoreKommunikation(einschaetzung.ScoreKommunikation);\r\n      } catch (error) {\r\n        console.error('Fehler beim Abrufen der Einschätzungen:', error);\r\n      }\r\n    };\r\n    \r\n    fetchEinschaetzungen(userID); \r\n    \r\n    const fetchOffersByCategories = async (isAdmin) => {\r\n      const scores = {\r\n        kommunikation: scoreKommunikation,\r\n        kollaboration: scoreKollaboration,\r\n        security: scoreSecurity,\r\n      };\r\n      \r\n      try {\r\n        if (isAdmin)\r\n          {\r\n            const response = await axios.get(\"http://localhost:3002/api/alleangebote\");\r\n            console.log('Angebote:', response.data);\r\n            setAngebote(response.data);\r\n          }\r\n          else {\r\n        const response = await axios.get(\"http://localhost:3002/api/angebote\", { params: { scores: JSON.stringify(scores) } });\r\n        console.log('Angebote:', response.data);\r\n        setAngebote(response.data);\r\n          }\r\n      } catch (error) {\r\n        console.error('Fehler beim Abrufen der Angebote:', error);\r\n      }\r\n    };\r\n    \r\n    fetchOffersByCategories(isAdmin);\r\n\r\n  \r\n    \r\n  }, [scoreSecurity, scoreKollaboration, scoreKommunikation]);\r\n\r\n\r\n  const [customizingMode, setCustomizingMode] = useState(false);\r\n\r\n\r\n  //ganzes Customizing auslagern\r\n  const handleEdit = (updatedAngebot) => { //muss noch mit der API verbunden werden\r\n    setAngebote((prevAngebote) =>\r\n      prevAngebote.map((angebot) =>\r\n        angebot.ID === updatedAngebot.ID ? updatedAngebot : angebot\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleDelete = (ID) => { //muss noch mit der API verbunden werden\r\n    setShowConfirmModal(true);\r\n    setDeleteId(ID);\r\n  };\r\n\r\n  const confirmDelete = async () => {\r\n    try {\r\n      await axios.delete(`http://localhost:3002/api/angebote/${deleteId}`);\r\n      setAngebote((prevAngebote) =>\r\n        prevAngebote.filter((angebot) => angebot.ID !== deleteId)\r\n      );\r\n      setShowConfirmModal(false);\r\n      setDeleteId(null);\r\n    } catch (error) {\r\n      console.error('Fehler beim Löschen des Angebots:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  const handleAdd = async () => {\r\n    const newAngebot = {\r\n    ID: null, \r\n    Name: \"Neues Offer\",\r\n    category: \"Kommunikation\", \r\n    Score: 5, \r\n    Bild: \"bild.jpg\", \r\n    Beschreibung: \"Beschreibung des neuen Angebots\",\r\n    NutzerID: userID\r\n    \r\n    };\r\n  \r\n    try {\r\n      // POST-Anfrage an die API senden\r\n      const response = await axios.post('http://localhost:3002/api/angebote', newAngebot);\r\n      const savedAngebot = response.data;\r\n      // Erfolgreiche Antwort behandeln\r\n      console.log(response.data); // Zum Testen oder für Feedback\r\n  \r\n      // Das folgende Setzen von State kann abhängig von deiner App-Logik variieren\r\n      setAngebote((prevAngebote) => [savedAngebot, ...prevAngebote]);\r\n      setCustomizingMode(true); // Optional: Setzen des Customizing-Modus\r\n     \r\n      \r\n\r\n    } catch (error) {\r\n      console.error('Fehler beim Hinzufügen des Angebots:', error);\r\n      // Hier kannst du eine Fehlerbehandlung einfügen, z.B. Benutzer benachrichtigen\r\n    }\r\n    const response = await axios.get(\"http://localhost:3002/api/alleangebote\");\r\n            console.log('Angebote:', response.data);\r\n            setAngebote(response.data);\r\n  };\r\n\r\n  const handleSave = async (updatedAngebot) => {\r\n    try {\r\n      await axios.put(`http://localhost:3002/api/angebote/${updatedAngebot.ID}`, updatedAngebot);\r\n      setAngebote((prevAngebote) =>\r\n        prevAngebote.map((angebot) =>\r\n          angebot.ID === updatedAngebot.ID ? updatedAngebot : angebot\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Fehler beim Speichern des Angebots:', error);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div ID=\"angebotseite\">\r\n      {!isAdmin && (\r\n      <Button variant=\"primary\" onClick={() => navigate(\"/auswertung\")}>\r\n        <IoMdArrowRoundBack size={25} />\r\n        Zurück\r\n      </Button> )}\r\n\r\n      {isAdmin && (\r\n        <>\r\n          <Button\r\n            variant={customizingMode ? \"warning\" : \"success\"}\r\n            onClick={() => setCustomizingMode(!customizingMode)}\r\n          >\r\n            {customizingMode ? \"Anpassung beenden\" : \"Angebote anpassen\"}\r\n          </Button>\r\n          {customizingMode && (\r\n            <>\r\n              {\" \"}\r\n              <Button variant=\"success\" onClick={handleAdd}>\r\n                <MdAdd size={20} /> Angebot hinzufügen\r\n              </Button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n      <h1 className=\"h1-with-spacing\">Ihre personalisierten Angebote:</h1>\r\n      <Grid container spacing={2}>\r\n        {angebote.slice().reverse().map((angebot) => (\r\n          <Grid item key={angebot.ID} xs={6}>\r\n            <Offer\r\n              data={angebot}\r\n              onEdit={handleEdit}\r\n              onDelete={handleDelete}\r\n              isAdmin={isAdmin}\r\n              onSave={handleSave}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <DeletePopup\r\n        show={showConfirmModal}\r\n        onHide={() => setShowConfirmModal(false)}\r\n        onConfirm={confirmDelete}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default OfferPage;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client/src/pagesDir/offerPage/OfferPage.js b/client/src/pagesDir/offerPage/OfferPage.js
--- a/client/src/pagesDir/offerPage/OfferPage.js	(revision 68eda5df2a50ffac60d28a83b7a93d09ea9a229a)
+++ b/client/src/pagesDir/offerPage/OfferPage.js	(date 1721160084014)
@@ -194,4 +194,4 @@
     </div>
   );
 };
-export default OfferPage;
+export default OfferPage;
\ No newline at end of file
